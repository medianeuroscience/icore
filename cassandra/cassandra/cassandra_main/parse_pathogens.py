#!/home/fhopp/anaconda2/bin/python

import sys, os
from cassandra.cqlengine.columns import *
from cassandra.cqlengine import connection
from cassandra.cqlengine.management import sync_table
from cassandra.cqlengine.models import Model
from cassandra.cluster import Cluster
import pandas as pd

os.environ['CQLENG_ALLOW_SCHEMA_MANAGEMENT'] = '1'

df = pd.read_csv('pathogen_data.csv')
df.columns = [x.replace('.', '') for x in df.columns]
df = df.replace(' ', float(-99.0))
df = df.fillna(float(-99.0))
df = df.apply(pd.to_numeric, errors='ignore')

CASSANDRA_CONTACT = '10.1.3.34'


class MurraySchaller(Model):
    culture = Text(primary_key=True)
    wldregs = Text()
    wldreg1 = Integer()
    gene5ht = Float()
    hpp9 = Integer()
    hppz9 = Float()
    hppz8xl = Float()
    hppz8xt = Float()
    hppz7 = Float()
    hppz6 = Float()
    hppbst = Float()
    hppindbst = Float()
    gdpwho = Integer()
    gdpwb = Integer()
    gdpfact = Integer()
    popdens = Float()
    latpopu = Integer()
    latcent = Integer()
    newgini = Float()
    sexratio = Float()
    sexrat = Float()
    soitot = Float()
    soimale = Float()
    soifem = Float()
    soisexd = Float()
    b5mneu = Float()
    b5mext = Float()
    b5mope = Float()
    b5magr = Float()
    b5mcon = Float()
    acquim = Float()
    b5sext = Float()
    b5sagr = Float()
    b5scon = Float()
    b5sneu = Float()
    b5sope = Float()
    b52ext = Float()
    b52ope = Float()
    b52neu = Float()
    b52agr = Float()
    b52con = Float()
    indhof = Float()
    indsuh = Float()
    colgelf = Float()
    colpron = Integer()
    foodspc = Float()
    foodplt = Integer()
    foodper = Float()
    patlei = Integer()
    patsch = Integer()
    patfil	= Integer()
    patlep = Integer()
    patthu = Integer()
    patmal	= Integer()
    pattrp = Integer()
    pattb	= Integer()
    patden = Integer()
    conform	= Float()
    wvsind	= Float()
    wvsobe = Float()
    wvsrac	= Float()
    wvsrel1 = Float()
    hdi = Float()
    lifsat	 = Float()
    satinq = Float()
    leftwri = Float()
    leftgen = Float()
    b5fsn1	 = Float()
    b5fsn2 = Float()
    b5fsn3 = Float()
    b5fsn4	 = Float()
    b5fsn5 = Float()
    b5fsn6 = Float()
    b5fse1 = Float()
    b5fse2	 = Float()
    b5fse3	 = Float()
    b5fse4 = Float()
    b5fse5	 = Float()
    b5fse6 = Float()
    b5fso1 = Float()
    b5fso2 = Float()
    b5fso3 = Float()
    b5fso4 = Float()
    b5fso5	 = Float()
    b5fso6 = Float()
    b5fsa1 = Float()
    b5fsa2 = Float()
    b5fsa3 = Float()
    b5fsa4	 = Float()
    b5fsa5	 = Float()
    b5fsa6	 = Float()
    b5fsc1 = Float()
    b5fsc2 = Float()
    b5fsc3	 = Float()
    b5fsc4	 = Float()
    b5fsc5	 = Float()
    b5fsc6	 = Float()
    b5fon1	 = Float()
    b5fon2	 = Float()
    b5fon3 = Float()
    b5fon4	 = Float()
    b5fon5	 = Float()
    b5fon6 = Float()
    b5foe1 = Float()
    b5foe2 = Float()
    b5foe3 = Float()
    b5foe4 = Float()
    b5foe5 = Float()
    b5foe6 = Float()
    b5foo1 = Float()
    b5foo2 = Float()
    b5foo3 = Float()
    b5foo4	 = Float()
    b5foo5	 = Float()
    b5foo6	 = Float()
    b5foa1 = Float()
    b5foa2	 = Float()
    b5foa3	 = Float()
    b5foa4 = Float()
    b5foa5 = Float()
    b5foa6 = Float()
    b5foc1	 = Float()
    b5foc2	 = Float()
    b5foc3 = Float()
    b5foc4	 = Float()
    b5foc5	 = Float()
    b5foc6	 = Float()
    b5avgn	 = Float()
    b5avge = Float()
    b5avgo = Float()
    b5avga	 = Float()
    b5avgc = Float()
    b5avgsd = Float()
    domviol = Float()
    freepr =  Integer()
    freecl = Integer()
    free2 = Integer()
    proprts = Integer()
    indxdem = Float()

def sync_tables(host=CASSANDRA_CONTACT):
    connection.setup([host], 'pathogens', protocol_version=3)
    sync_table(MurraySchaller)

def establish_session(host=CASSANDRA_CONTACT):
    c = Cluster([host])
                #default_retry_policy=StubbornRetryPolicy())
    s = c.connect('pathogens')
    return (c, s)


def insert_pathogens():
    cluster, session = establish_session()
    pathogen_query = session.prepare(('INSERT INTO murray_schaller ({}) VALUES ({});'.format(','.join([k for k in MurraySchaller._columns.keys()]),','.join(['?' for k in MurraySchaller._columns.keys()]))))


    for i, row in df.iterrows():
        pat_dict = {}
        for col in df.columns:
            pat_dict[col] = row[col]
         #print(type(row[col]))
        sys.stdout.write('.')
        sys.stdout.flush()

        session.execute(pathogen_query, pat_dict)

    sys.stdout.write('Finished at {}.'.format(datetime.utcnow()))
    sys.stdout.flush()
    session.shutdown()
    cluster.shutdown()

    return True